--------------------------------------------------------
--  DDL for Table COURSE
--------------------------------------------------------
CREATE TABLE COURSE
(
  ID NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  courseName VARCHAR2(30) NOT NULL, 
  description VARCHAR2(255),
  imagePath VARCHAR2(255) NOT NULL,
  status VARCHAR2(120),
  
  CONSTRAINT COURSE_PK PRIMARY KEY (ID) ENABLE 
);

--------------------------------------------------------
--  DDL for Table Exam
--------------------------------------------------------
CREATE TABLE EXAM 
(
  ID NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  title VARCHAR2(50) NOT NULL,
  description VARCHAR2(255),
  successMark FLOAT CHECK(successMark > 0) NOT NULL,
  passcode VARCHAR2(150) NOT NULL,
  cost FLOAT CHECK(cost >= 0) NOT NULL,
  examLevel VARCHAR2(12) CHECK(examLevel IN ('Beginner',
                                            'Advanced',
                                            'Intermediate',
                                            'Expert')) NOT NULL,
                                            
  startDate TIMESTAMP CHECK(startDate >= TO_CHAR(CURRENT_TIMESTAMP)) NOT NULL,
  
  endDate TIMESTAMP CHECK(endDate > TO_CHAR(CURRENT_TIMESTAMP) 
                        AND endDate > startDate) NOT NULL,
                        
  status VARCHAR2(200), 
  createDate TIMESTAMP, 
  courseId NUMBER, 

  CONSTRAINT EXAM_PK PRIMARY KEY(ID) ENABLE,
  
  CONSTRAINT course_exam_fk
  FOREIGN KEY (courseId) 
  REFERENCES course(ID) 
  ON DELETE SET NULL ENABLE
);

CREATE UNIQUE INDEX exam_passcode ON exam(passcode);

CREATE UNIQUE INDEX exam_title ON exam(title);


--------------------------------------------------------
--  DDL for Table QUESTION
--------------------------------------------------------
CREATE TABLE QUESTION 
(
  ID NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL 
, QUESTIONTEXT VARCHAR2(255) 
, OPTION1 VARCHAR2(350) 
, OPTION2 VARCHAR2(350) 
, OPTION3 VARCHAR2(350) 
, OPTION4 VARCHAR2(350) 
, ANSWER VARCHAR2(350) 
, SCORE FLOAT 
, STATUS VARCHAR2(150) 
, EXAMID NUMBER 
, CONSTRAINT QUESTION_PK PRIMARY KEY (ID) ENABLE 
);

ALTER TABLE QUESTION
ADD CONSTRAINT QUESTION_FK1 FOREIGN KEY(EXAMID) REFERENCES EXAM (ID) ON DELETE SET NULL ENABLE;

--------------------------------------------------------
--  DDL for Table ACCOUNT
--------------------------------------------------------
CREATE TABLE ACCOUNT 
(
  ID NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL 
, ROLENAME VARCHAR2(250) 
, USERNAME VARCHAR2(255) 
, FULLNAME VARCHAR2(255) 
, EMAIL VARCHAR2(255) 
, PASSWORD VARCHAR2(255) 
, GENDER VARCHAR2(255) 
, BOD DATE 
, PHONENUMBER VARCHAR2(255) 
, ADDRESS VARCHAR2(255) 
, IMAGEPATH VARCHAR2(255) 
, CONSTRAINT ACCOUNT_PK PRIMARY KEY (ID) ENABLE 
);

CREATE UNIQUE INDEX ACCOUNT_EMAIL ON ACCOUNT (EMAIL);

CREATE UNIQUE INDEX ACCOUNT_USERNAME ON ACCOUNT (USERNAME);

--------------------------------------------------------
--  DDL for Table RESULT
--------------------------------------------------------
CREATE TABLE RESULT 
(
  ID NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL 
, USERANSWER VARCHAR2(350) 
, QUESTIONID NUMBER 
, ACCOUNTID NUMBER 
, CONSTRAINT RESULT_PK PRIMARY KEY (ID) ENABLE 
);

ALTER TABLE RESULT
ADD CONSTRAINT RESULT_FK1 FOREIGN KEY (QUESTIONID) REFERENCES QUESTION (ID) ON DELETE SET NULL ENABLE;

ALTER TABLE RESULT
ADD CONSTRAINT RESULT_FK2 FOREIGN KEY (ACCOUNTID) REFERENCES ACCOUNT (ID) ON DELETE SET NULL ENABLE;

--------------------------------------------------------
--  DDL for Table INVOICE
--------------------------------------------------------
CREATE TABLE INVOICE 
(
  ID NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL 
, DATETIME DATE 
, EXAMID NUMBER 
, ACCOUNTID NUMBER 
, CONSTRAINT INVOICE_PK PRIMARY KEY (ID) ENABLE 
);

ALTER TABLE INVOICE
ADD CONSTRAINT INVOICE_FK1 FOREIGN KEY (EXAMID) REFERENCES EXAM (ID) ON DELETE SET NULL ENABLE;

ALTER TABLE INVOICE
ADD CONSTRAINT INVOICE_FK2 FOREIGN KEY (ACCOUNTID) REFERENCES ACCOUNT (ID) ON DELETE SET NULL ENABLE;

--------------------------------------------------------
--  DDL for Table CERTIFICATE
--------------------------------------------------------
CREATE TABLE CERTIFICATE 
(
  ID NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL 
, DATETIME DATE 
, EXAMID NUMBER 
, ACCOUNTID NUMBER 
, CONSTRAINT CERTIFICATE_PK PRIMARY KEY (ID) ENABLE 
);

ALTER TABLE CERTIFICATE
ADD CONSTRAINT CERTIFICATE_FK1 FOREIGN KEY (EXAMID) REFERENCES EXAM (ID) ON DELETE SET NULL ENABLE;

ALTER TABLE CERTIFICATE
ADD CONSTRAINT CERTIFICATE_FK2 FOREIGN KEY (ACCOUNTID) REFERENCES ACCOUNT (ID) ON DELETE SET NULL ENABLE;

--------------------------------------------------------
--  DDL for Table CREDITCARD
--------------------------------------------------------
CREATE TABLE CREDITCARD 
(
  ID NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL 
, CARDNUMBER VARCHAR2(250) 
, BALANCE FLOAT 
, ACCOUNTID NUMBER 
, CONSTRAINT CREDITCARD_PK PRIMARY KEY (ID) ENABLE 
);

ALTER TABLE CREDITCARD
ADD CONSTRAINT CREDITCARD_FK1 FOREIGN KEY (ACCOUNTID) REFERENCES ACCOUNT (ID) ON DELETE SET NULL ENABLE;

--------------------------------------------------------
--  DDL for Table SCORE
--------------------------------------------------------
CREATE TABLE SCORE 
(
  ID NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL 
, USERGRADE FLOAT 
, EXAMID NUMBER 
, ACCOUNTID NUMBER 
, CONSTRAINT SCORE_PK PRIMARY KEY (ID) ENABLE 
);

ALTER TABLE SCORE
ADD CONSTRAINT SCORE_FK1 FOREIGN KEY (EXAMID) REFERENCES EXAM (ID) ON DELETE SET NULL ENABLE;

ALTER TABLE SCORE
ADD CONSTRAINT SCORE_FK2 FOREIGN KEY (ACCOUNTID) REFERENCES ACCOUNT (ID) ON DELETE SET NULL ENABLE;